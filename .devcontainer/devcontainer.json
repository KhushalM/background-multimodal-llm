{
    "name": "Multimodal AI Assistant - Cloud Development",
    "dockerComposeFile": "docker-compose.yml",
    "service": "app",
    "workspaceFolder": "/workspaces/background-multimodal-llm",
    "features": {"ghcr.io/devcontainers/features/docker-in-docker:2": {
        "enabled": true
    }},
    "customizations": {
        "vscode": {
            "extensions": [
                // Python development for AI/ML
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-python.black-formatter",
                "ms-python.isort",
                "ms-python.flake8",
                // Frontend development (React + TypeScript + Vite)
                "ms-vscode.vscode-typescript-next",
                "bradlc.vscode-tailwindcss",
                "esbenp.prettier-vscode",
                "ms-vscode.live-server",
                "ms-vscode.vscode-json",
                "chakra-ui.chakra-ui-snippets",
                // Configuration files
                "redhat.vscode-yaml",
                // AI assistance
                "github.copilot",
                "github.copilot-chat",
                // Documentation
                "njpwerner.autodocstring"
            ],
            "settings": {
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "files.associations": {
                    "*.yaml": "yaml",
                    "*.yml": "yaml",
                    "*.dockerfile": "dockerfile",
                    "Dockerfile*": "dockerfile",
                    "*.tf": "terraform"
                },
                "terminal.integrated.defaultProfile.linux": "bash",
                "python.analysis.typeCheckingMode": "basic",
                "python.analysis.autoImportCompletions": true,
                // Python formatting settings - remove 79 character limit
                "python.formatting.provider": "black",
                "black-formatter.args": ["--line-length", "200"],
                "python.linting.flake8Args": ["--max-line-length=200"],
                "python.linting.pylintArgs": ["--max-line-length=200"],
                "isort.args": ["--line-length", "200"],
                // TypeScript settings
                "typescript.preferences.includePackageJsonAutoImports": "auto",
                "typescript.suggest.autoImports": true,
                "typescript.updateImportsOnFileMove.enabled": "always",
                // Frontend development
                "emmet.includeLanguages": {
                    "typescript": "html",
                    "typescriptreact": "html"
                },
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.fixAll.eslint": "explicit"
                },
                "remote.autoForwardPorts": false,
                "remote.portsAttributes": {
                    "3000": {
                        "onAutoForward": "ignore"
                    },
                    "3001": {
                        "onAutoForward": "ignore"
                    }
                }
            }
        }
    },
    "forwardPorts": [
        8000
    ],
    "otherPortsAction": "ignore",
    "portsAttributes": {
        "3000": {
            "label": "Vite Frontend (React + TypeScript)",
            "onAutoForward": "ignore"
        },
        "8000": {
            "label": "FastAPI Backend (Multimodal AI)",
            "onAutoForward": "notify"
        }
    },
    "postCreateCommand": "chmod +x .devcontainer/setup.sh && .devcontainer/setup.sh && cd backend/MCP/mcp_servers/modelcontextprotocol/perplexity-ask && docker build -t mcp/perplexity-ask:latest .",
    "remoteUser": "vscode",
    "mounts": [
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
    ],
    "runArgs": [
        "--platform=linux/amd64"
    ],
    "containerEnv": {
        "PYTHONPATH": "/workspaces/background-multimodal-llm",
        "DEVELOPMENT_MODE": "cloud",
        // Cache for API responses only (no model storage needed)
        "HF_HOME": "/workspace/data/hf_cache",
        // API endpoints
        "BACKEND_URL": "http://localhost:8000",
        "FRONTEND_URL": "http://localhost:3001"
    }
}